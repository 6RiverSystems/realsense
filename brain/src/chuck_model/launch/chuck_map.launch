<launch>
	<!-- Launch map server -->
	<node name="map_server" pkg="map_server" type="map_server" args=" $(find rhq_map)/maps/rhq.yaml" />
	
	<!-- Parsing xacro and setting robot_description parameter -->
	<param name="robot_description" command="$(find xacro)/xacro.py $(find chuck_model)/urdf/chuck.urdf.xacro" />

	<!-- Joint and robot state publishers -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
		<rosparam file="$(find chuck_model)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
		<rosparam file="$(find chuck_model)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
		<rosparam file="$(find chuck_model)/config/local_costmap_params.yaml" command="load" />
		<rosparam file="$(find chuck_model)/config/global_costmap_params.yaml" command="load" />
		<rosparam file="$(find chuck_model)/config/base_local_planner_params.yaml" command="load" />
	</node>

	<node name="fake_localization" pkg="fake_localization" type="fake_localization" respawn="false" />

	<!-- Launch visualization in rviz -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find chuck_model)/urdf.rviz" required="true" />
</launch>
