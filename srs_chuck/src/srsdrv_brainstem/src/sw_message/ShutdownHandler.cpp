#include <srsdrv_brainstem/sw_message/ShutdownHandler.hpp>

#include <srsdrv_brainstem/BrainStemMessageProcessor.h>

#include <ros/ros.h>

namespace srs {

////////////////////////////////////////////////////////////////////////////////////////////////////
// Public methods

////////////////////////////////////////////////////////////////////////////////////////////////////TapBrainstemCmd_Startup
ShutdownHandler::ShutdownHandler(BrainStemMessageProcessor* owner) :
    SoftwareMessageHandler(owner)
{
	tapShutdown_.attach(this);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void ShutdownHandler::notified(Subscriber<std_msgs::Bool>* subject)
{
	uint8_t cMessage = static_cast<uint8_t>(BRAIN_STEM_CMD::SHUTDOWN);

	getOwner()->sendCommand(reinterpret_cast<char*>(&cMessage), 1);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// Private methods


} // namespace srs
