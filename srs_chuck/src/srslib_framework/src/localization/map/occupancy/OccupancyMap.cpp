#include <srslib_framework/localization/map/occupancy/OccupancyMap.hpp>

namespace srs {

////////////////////////////////////////////////////////////////////////////////////////////////////
// Public methods

////////////////////////////////////////////////////////////////////////////////////////////////////
OccupancyMap::OccupancyMap(unsigned int widthCells, unsigned int heightCells, double resolution) :
        BaseMap(widthCells, heightCells, resolution)
{
    occupancyMetadata_.heightCells = heightCells;
    occupancyMetadata_.heightMm = getHeightMm();
    occupancyMetadata_.resolution = resolution;
    occupancyMetadata_.widthCells = widthCells;
    occupancyMetadata_.widthMm = getWidthMm();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void OccupancyMap::addCost(unsigned int c, unsigned int r, int cost)
{
    getGrid()->addCost(Grid2d::Location(c, r), cost);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void OccupancyMap::setCost(unsigned int c, unsigned int r, int cost)
{
    getGrid()->addCost(Grid2d::Location(c, r), cost);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void OccupancyMap::setObstruction(unsigned int c, unsigned int r)
{
    getGrid()->addCost(Grid2d::Location(c, r), Grid2d::COST_MAX);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// Private methods
//

////////////////////////////////////////////////////////////////////////////////////////////////////
// Global operators

////////////////////////////////////////////////////////////////////////////////////////////////////
ostream& operator<<(ostream& stream, const OccupancyMap& map)
{
    stream << "OccupancyMap" << endl;
    stream << *map.getGrid() << endl;

    return stream;
}

} // namespace srs
