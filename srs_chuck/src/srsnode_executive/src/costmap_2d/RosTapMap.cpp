#include <srsnode_highlevel_behavior/costmap_2d/RosTapMap.hpp>

namespace srs {

////////////////////////////////////////////////////////////////////////////////////////////////////
// Public methods

////////////////////////////////////////////////////////////////////////////////////////////////////
RosTapMap::RosTapMap(string nodeName) :
    RosTap(nodeName, "Global Map Tap"),
    currentMap_(nullptr)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// Private methods

////////////////////////////////////////////////////////////////////////////////////////////////////
Grid2d* RosTapMap::convertArrayToGrid(int width, int height, unsigned char& array[])
{
    Grid2d* result = new Grid2d(width, height);

    for (int r = 0; r < width; r++)
    {
        for (int c = 0; c < height; c++)
        {
        }
    }

    return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void RosTapMap::onMap(const nav_msgs::OccupancyGridConstPtr& message)
{
    delete currentMap_;
    currentMap_ = convertArrayToGrid(message->info.width, message->info.height, message->data);

    setNewData(true);
}

} // namespace srs
