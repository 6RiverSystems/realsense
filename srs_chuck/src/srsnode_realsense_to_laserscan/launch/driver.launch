<!-- 
  *
  * (c) Copyright 2015-2016 River Systems, all rights reserved.
  *
  * This is proprietary software, unauthorized distribution is not permitted.
  *
-->
<launch>

	<node pkg="nodelet" type="nodelet" name="standalone_nodelet"  args="manager" output="screen"/>

    <arg name="serial_no" default="" />
	<arg name="mode" default="manual" />
	<arg name="color_height" default="240" />
	<arg name="color_width" default="320" />
	<arg name="depth_height" default="252" />
	<arg name="depth_width" default="332" />
	<arg name="enable_depth" default="true" />
	<arg name="enable_color" default="true" />
	<arg name="enable_pointcloud" default="true" />
	<arg name="enable_tf" default="false" />
	<arg name="depth_fps" default="30" />
	<arg name="color_fps" default="30" />	
	<arg name="r200_lr_gain" default="100" />

    <node pkg="nodelet" type="nodelet" name="RealsenseNodelet"
        args="load realsense_camera/RealsenseNodelet standalone_nodelet">
        <param name="serial_no"         type="str"  value="$(arg serial_no)" />
        <param name="mode"              type="str"  value="$(arg mode)" />
        <param name="enable_depth"      type="bool" value="$(arg enable_depth)" />
        <param name="enable_color"      type="bool" value="$(arg enable_color)" />
        <param name="enable_pointcloud" type="bool" value="$(arg enable_pointcloud)" />
        <param name="enable_tf"         type="bool" value="$(arg enable_tf)" />
        <param name="depth_width"       type="int"  value="$(arg depth_width)" />
        <param name="depth_height"      type="int"  value="$(arg depth_height)" />
        <param name="color_width"       type="int"  value="$(arg color_width)" />
        <param name="color_height"      type="int"  value="$(arg color_height)" />
        <param name="depth_fps"         type="int"  value="$(arg depth_fps)" />
        <param name="color_fps"         type="int"  value="$(arg color_fps)" />
        <param name="r200_lr_auto_exposure_enabled"		type="bool"  value="false" />
        <param name="r200_lr_gain"		type="int"  value="100" />
        <param name="r200_lr_exposure"		type="int"  value="330" />
    </node>

	<node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

	<!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
    <node pkg="nodelet" type="nodelet" name="VoxelGrid" args="load pcl/VoxelGrid pcl_manager" output="screen">
        <remap from="~input" to="/camera/depth/points" />
        <rosparam>
            filter_field_name: z
            filter_limit_min: -0.1
            filter_limit_max: 1000
            filter_limit_negative: False
            leaf_size: 0.025
        </rosparam>
 	</node>

   <!-- <node pkg="nodelet" type="nodelet" name="PassThrough" args="load pcl/PassThrough pcl_manager" output="screen">
        <remap from="~input" to="/camera/depth/points"/>
        <rosparam>
            filter_field_name: z
            filter_limit_min: 0.02
            filter_limit_max: 3.5
            filter_limit_negative: False
        </rosparam>
	</node> -->

	<node pkg="nodelet" type="nodelet" name="StatisticalOutlier" args="load pcl/StatisticalOutlierRemoval pcl_manager" output="screen">
        <remap from="~input" to="/VoxelGrid/output"/>
        <rosparam>
               mean_k: 10
               stddev: 0.05
        </rosparam>
	</node>

	<!-- <node pkg="nodelet" type="nodelet" name="RadiusOutlier" args="load pcl/RadiusOutlierRemoval pcl_manager" output="screen">
        <remap from="~input" to="/VoxelGrid/output"/>
        <rosparam>
               radius_search: 0.05
               min_neighbors: 20
        </rosparam>
	</node> -->
    
    <!-- push pointcloud_to_laserscan nodelet into sensor's nodelet manager-->
    <node pkg="nodelet" type="nodelet" name="pointcloud_to_laserscan" args="load pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet standalone_nodelet">

        <remap from="cloud_in" to="/StatisticalOutlier/output"/>
        <remap from="scan" to="/camera/depth/scan"/>
        <rosparam>
            target_frame: laser_frame # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.05
            min_height: 0.03
            max_height: 3.0

            angle_min: -1.5708 # -M_PI/2
            angle_max: 1.5708 # M_PI/2
            angle_increment: 0.008 # M_PI/360.0
            scan_time: 0.3333
            range_min: 0.3
            range_max: 8.0
            use_inf: true

            # Concurrency level, affects number of pointclouds queued for processing, thread number governed by nodelet manager
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 0
        </rosparam>
    </node>

	<node name="srsnode_realsense_to_laserscan" 
        pkg="srsnode_realsense_to_laserscan"
        type="srsnode_realsense_to_laserscan"
        output="screen" respawn="true"/>
</launch>

